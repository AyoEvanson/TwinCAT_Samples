<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="OversamplingHandler" Id="{db631803-136a-4327-a87d-460ddf9c20c8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK OversamplingHandler
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	i	:	INT;
	
	ELM3xxxSamplesIn	AT%I*	:	ARRAY[0..noOfSamples] OF DINT;
	ELM3xxxSamplesOut	:	ARRAY[0..noOfSamples] OF LREAL;
	
	PM10VMax	:	LREAL := 7812500; //8388607 - 24bit not extended
	PM10VMin	:	LREAL := 7812500;
	PM10Mult	:	LREAL := 10;
	
	fbSignal	:	SignalTimeComparison;
	
	fbDC	:	DistributedClockHandler;
END_VAR
VAR CONSTANT
	noOfSamples	:	INT := 19;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[FOR i := 0 TO noOfSamples DO
	ELM3xxxSamplesOut[i] := AnalogSignalConverter(input := ELM3xxxSamplesIn[i], maximum := PM10VMax, minimum := PM10VMin, multiplier := PM10Mult);
END_FOR

fbDC(Samples := ELM3xxxSamplesOut);]]></ST>
    </Implementation>
    <Method Name="AnalogSignalConverter" Id="{0152649c-f311-4495-80d7-a35c23c23a8b}">
      <Declaration><![CDATA[METHOD AnalogSignalConverter : LREAL
VAR_INPUT
	input		:	LREAL;
	maximum		:	LREAL;
	minimum		:	LREAL;
	multiplier	:	LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF input > 0 THEN
	AnalogSignalConverter := (input/maximum) * multiplier;
ELSIF input < 0 THEN
	AnalogSignalConverter := (input/minimum) * multiplier;
ELSIF input = 0 THEN
	AnalogSignalConverter := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="OversamplingHandler">
      <LineId Id="9" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="36" Count="0" />
      <LineId Id="35" Count="0" />
    </LineIds>
    <LineIds Name="OversamplingHandler.AnalogSignalConverter">
      <LineId Id="41" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="17" Count="2" />
      <LineId Id="48" Count="0" />
      <LineId Id="57" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>